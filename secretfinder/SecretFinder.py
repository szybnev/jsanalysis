#!/usr/bin/env python
# SecretFinder - Tool for discover apikeys/accesstokens and sensitive data in js file
# based to LinkFinder - github.com/GerbenJavado
# By m4ll0k (@m4ll0k2) github.com/m4ll0k
# edited by Fricciolosa Red Team


import os
import sys
import re
import glob
import argparse
import jsbeautifier
import webbrowser
import subprocess
import base64
import requests
import string
import random
from html import escape
import urllib3
import xml.etree.ElementTree

# for read local file with file:// protocol
from requests_file import FileAdapter
from lxml import html
from urllib.parse import urlparse

if not sys.version_info.major >= 3:
    print("[ + ] Run this tool with python version 3.+")
    sys.exit(0)
os.environ["BROWSER"] = "open"

# disable warning

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# regex
_regex = {
    "Webpack": r"(sourceURL|sourceMappingURL).{0,20}",
    "square_oauth_secret" : r"sq0csp-[ 0-9A-Za-z\-_]{43}|sq0[a-z]{3}-[0-9A-Za-z\-_]{22,43}",
    "square_access_token" : r"sqOatp-[0-9A-Za-z\-_]{22}|EAAA[a-zA-Z0-9]{60}",
    "stripe_restricted_api" : r"rk_live_[0-9a-zA-Z]{24}",
    "github_access_token" : r"[a-zA-Z0-9_-]*:[a-zA-Z0-9_\-]+@github\.com*.{0,20}",
    "json_web_token" : r"ey[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$",
    "artifactory_api_token" : r"(?:\s|=|:|\"|^)AKC[a-zA-Z0-9]{10,}",
    "artifactory_password" : r"(?:\s|=|:|\"|^)AP[\dABCDEF][a-zA-Z0-9]{8,}",
    "AWS_Client_ID" : r"(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}",
    "Amazon_AWS_Secret_Access_Key": r"[\\s][a-zA-Z0-9]{40}[\\s].{0,20}",
    "Generic_API_Key": r"[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].*['|\"][0-9a-zA-Z]{32,45}['|\"].{0,20}",
    "Generic Secret": r"[s|S][e|E][c|C][r|R][e|E][t|T].*['|\"][0-9a-zA-Z]{32,45}['|\"].{0,20}",
    "GitHub": r"[g|G][i|I][t|T][h|H][u|U][b|B].*['|\"][0-9a-zA-Z]{35,40}['|\"].{0,20}",
    "GitLab_PAT": r"(_|-?)([t|T][o|O][k|K][e|E][n|N])(:|=| )(.{0,3})(\\S{20})(.?)(\\n|\\r|\\n\\r|$).{0,20}",
    "Google_(GCP)_Service-account": r"\"type\": \"service_account\".{0,20}",
    "Google_Cloud_Platform_API_Key": r"AIza[0-9A-Za-z\\-_]{35}",
    "Google_Cloud_Platform_OAuth": r"[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com.{0,20}",
    "Google_Drive_OAuth": r"[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com.{0,20}",
    "Heroku_API_Key": r"[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}",
    "Password_in_URL": r"[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s].{0,20}",
    "Picatic_API_Key": r"sk_live_[0-9a-z]{32}",
    "Send_Grid_API": r"SG\\.[a-zA-Z0-9]{22}\\.[a-zA-Z0-9]{43}",
    "Slack_Token": r"xox[baprs]-([0-9a-zA-Z]{10,48})?",
    "Cloudinary_Basic_Auth" : r"cloudinary:\/\/[0-9]{15}:[0-9A-Za-z]+@[a-z]+",
    "MD5_Hash" : r"[a-f0-9]{32}",
    "vtex-key":r"vtex-api-(appkey|apptoken)",
    "possible_Creds2": r"(?i)pwd.{0,8}[`=:\" '].{0,20}",
    "possible_Creds3": r"(?i)secret.{0,8}[`=:\" '].{0,20}",
    "possible_Creds4": r"(?i)password.{0,6}[`=:\" '].{0,20}",
    "firebase1":r"firebase.initializeApp(.*\\s*[\\w*\\s*a-zA-Z]*\\w.*){100}",
    "jwt1":r'(eyJ|YTo|Tzo|PD[89]|aHR0cHM6L|aHR0cDo|rO0)[a-zA-Z0-9+/]+={0,2}.{0,20}',
    'bearer':r'bearer [a-zA-Z0-9_\\-\\.=]+',
    "google_api": r"AIza[0-9A-Za-z-_]{35}",
    "firebase": r"AAAA[A-Za-z0-9_-]{7}:[A-Za-z0-9_-]{140}",
    "amazon_aws_access_key_id": r"AKIA[0-9A-Z]{16}",
    "amazon_mws_auth_toke": r"amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
    "amazon_aws_url2": r"("
    r"[a-zA-Z0-9-\.\_]+\.s3\.amazonaws\.com"
    r"|s3://[a-zA-Z0-9-\.\_]+"
    r"|s3-[a-zA-Z0-9-\.\_\/]+"
    r"|s3.amazonaws.com/[a-zA-Z0-9-\.\_]+"
    r"|s3.console.aws.amazon.com/s3/buckets/[a-zA-Z0-9-\.\_]+)",
    "authorization_basic": r"(?i)Authorization: Basic [a-zA-Z0-9=:_\+\/-]{4,100}",
    "authorization_bearer": r"bearer [a-zA-Z0-9_\-\.=:_\+\/]{5,100}",
    "authorization_api": r"api[key|_key|\s+]+[a-zA-Z0-9_\-]{5,100}",
    "json_web_token": r"ey[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$",
    "SSH_privKey": r"([-]+BEGIN [^\s]+ PRIVATE KEY[-]+[\s]*[^-]*[-]+END [^\s]+ PRIVATE KEY[-]+).{0,20}",
    "secrets pattern": r"(aws_access|aws_secret|api[_-]?key|ListBucketResult|S3_ACCESS_KEY|Authorization:|RSA PRIVATE|Index of|aws_|secret|credential|ssh-rsa AA).{0,20}",
    "secrets2": r"AIza[0-9A-Za-z\\-_]{35}",
    "1": r"zopim[_-]?account[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "2": r"zhuliang[_-]?gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "3": r"zensonatypepassword(=| =|:| :|\"|'| \"| ').{0,10}",
    "4": r"zendesk[_-]?travis[_-]?github(=| =|:| :|\"|'| \"| ').{0,10}",
    "5": r"yt[_-]?partner[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "6": r"yt[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "7": r"yt[_-]?account[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "8": r"yangshun[_-]?gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "9": r"yangshun[_-]?gh[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "10": r"www[_-]?googleapis[_-]?com(=| =|:| :|\"|'| \"| ').{0,10}",
    "11": r"wpt[_-]?ssh[_-]?private[_-]?key[_-]?base64(=| =|:| :|\"|'| \"| ').{0,10}",
    "12": r"wpt[_-]?ssh[_-]?connect(=| =|:| :|\"|'| \"| ').{0,10}",
    "13": r"wpt[_-]?report[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "14": r"wpt[_-]?prepare[_-]?dir(=| =|:| :|\"|'| \"| ').{0,10}",
    "15": r"wpt[_-]?db[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "16": r"wpt[_-]?db[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "17": r"wporg[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "18": r"wpjm[_-]?phpunit[_-]?google[_-]?geocode[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "19": r"wordpress[_-]?db[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "20": r"wordpress[_-]?db[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "21": r"wincert[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "22": r"widget[_-]?test[_-]?server(=| =|:| :|\"|'| \"| ').{0,10}",
    "23": r"widget[_-]?fb[_-]?password[_-]?3(=| =|:| :|\"|'| \"| ').{0,10}",
    "24": r"widget[_-]?fb[_-]?password[_-]?2(=| =|:| :|\"|'| \"| ').{0,10}",
    "25": r"widget[_-]?fb[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "26": r"widget[_-]?basic[_-]?password[_-]?5(=| =|:| :|\"|'| \"| ').{0,10}",
    "27": r"widget[_-]?basic[_-]?password[_-]?4(=| =|:| :|\"|'| \"| ').{0,10}",
    "28": r"widget[_-]?basic[_-]?password[_-]?3(=| =|:| :|\"|'| \"| ').{0,10}",
    "29": r"widget[_-]?basic[_-]?password[_-]?2(=| =|:| :|\"|'| \"| ').{0,10}",
    "30": r"widget[_-]?basic[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "31": r"watson[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "32": r"watson[_-]?device[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "33": r"watson[_-]?conversation[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "34": r"wakatime[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "35": r"vscetoken(=| =|:| :|\"|'| \"| ').{0,10}",
    "36": r"vip[_-]?github[_-]?deploy[_-]?key[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "37": r"vip[_-]?github[_-]?deploy[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "38": r"vip[_-]?github[_-]?build[_-]?repo[_-]?deploy[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "39": r"v[_-]?sfdc[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "40": r"v[_-]?sfdc[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "41": r"usertravis(=| =|:| :|\"|'| \"| ').{0,10}",
    "42": r"user[_-]?assets[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "43": r"user[_-]?assets[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "44": r"use[_-]?ssh(=| =|:| :|\"|'| \"| ').{0,10}",
    "45": r"us[_-]?east[_-]?1[_-]?elb[_-]?amazonaws[_-]?com(=| =|:| :|\"|'| \"| ').{0,10}",
    "46": r"urban[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "47": r"urban[_-]?master[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "48": r"urban[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "49": r"unity[_-]?serial(=| =|:| :|\"|'| \"| ').{0,10}",
    "50": r"unity[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "51": r"twitteroauthaccesssecret(=| =|:| :|\"|'| \"| ').{0,10}",
    "52": r"twitter[_-]?consumer[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "53": r"twine[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "54": r"twilio[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "55": r"twilio[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "56": r"twilio[_-]?configuration[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "57": r"twilio[_-]?chat[_-]?account[_-]?api[_-]?service(=| =|:| :|\"|'| \"| ').{0,10}",
    "58": r"twilio[_-]?api[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "59": r"twilio[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "60": r"trex[_-]?okta[_-]?client[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "61": r"trex[_-]?client[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "62": r"travis[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "63": r"travis[_-]?secure[_-]?env[_-]?vars(=| =|:| :|\"|'| \"| ').{0,10}",
    "64": r"travis[_-]?pull[_-]?request(=| =|:| :|\"|'| \"| ').{0,10}",
    "65": r"travis[_-]?gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "66": r"travis[_-]?e2e[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "67": r"travis[_-]?com[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "68": r"travis[_-]?branch(=| =|:| :|\"|'| \"| ').{0,10}",
    "69": r"travis[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "70": r"travis[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "71": r"token[_-]?core[_-]?java(=| =|:| :|\"|'| \"| ').{0,10}",
    "72": r"thera[_-]?oss[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "73": r"tester[_-]?keys[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "74": r"test[_-]?test(=| =|:| :|\"|'| \"| ').{0,10}",
    "75": r"test[_-]?github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "76": r"tesco[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "77": r"svn[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "78": r"surge[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "79": r"surge[_-]?login(=| =|:| :|\"|'| \"| ').{0,10}",
    "80": r"stripe[_-]?public(=| =|:| :|\"|'| \"| ').{0,10}",
    "81": r"stripe[_-]?private(=| =|:| :|\"|'| \"| ').{0,10}",
    "82": r"strip[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "83": r"strip[_-]?publishable[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "84": r"stormpath[_-]?api[_-]?key[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "85": r"stormpath[_-]?api[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "86": r"starship[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "87": r"starship[_-]?account[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "88": r"star[_-]?test[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "89": r"star[_-]?test[_-]?location(=| =|:| :|\"|'| \"| ').{0,10}",
    "90": r"star[_-]?test[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "91": r"star[_-]?test[_-]?aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "92": r"staging[_-]?base[_-]?url[_-]?runscope(=| =|:| :|\"|'| \"| ').{0,10}",
    "93": r"ssmtp[_-]?config(=| =|:| :|\"|'| \"| ').{0,10}",
    "94": r"sshpass(=| =|:| :|\"|'| \"| ').{0,10}",
    "95": r"srcclr[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "96": r"square[_-]?reader[_-]?sdk[_-]?repository[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "97": r"sqssecretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "98": r"sqsaccesskey(=| =|:| :|\"|'| \"| ').{0,10}",
    "99": r"spring[_-]?mail[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "100": r"spotify[_-]?api[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "101": r"spotify[_-]?api[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "102": r"spaces[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "103": r"spaces[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "104": r"soundcloud[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "105": r"soundcloud[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "106": r"sonatypepassword(=| =|:| :|\"|'| \"| ').{0,10}",
    "107": r"sonatype[_-]?token[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "108": r"sonatype[_-]?token[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "109": r"sonatype[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "110": r"sonatype[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "111": r"sonatype[_-]?nexus[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "112": r"sonatype[_-]?gpg[_-]?passphrase(=| =|:| :|\"|'| \"| ').{0,10}",
    "113": r"sonatype[_-]?gpg[_-]?key[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "114": r"sonar[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "115": r"sonar[_-]?project[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "116": r"sonar[_-]?organization[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "117": r"socrata[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "118": r"socrata[_-]?app[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "119": r"snyk[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "120": r"snyk[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "121": r"snoowrap[_-]?refresh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "122": r"snoowrap[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "123": r"snoowrap[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "124": r"slate[_-]?user[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "125": r"slash[_-]?developer[_-]?space[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "126": r"slash[_-]?developer[_-]?space(=| =|:| :|\"|'| \"| ').{0,10}",
    "127": r"signing[_-]?key[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "128": r"signing[_-]?key[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "129": r"signing[_-]?key[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "130": r"signing[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "131": r"setsecretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "132": r"setdstsecretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "133": r"setdstaccesskey(=| =|:| :|\"|'| \"| ').{0,10}",
    "134": r"ses[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "135": r"ses[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "136": r"service[_-]?account[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "137": r"sentry[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "138": r"sentry[_-]?endpoint(=| =|:| :|\"|'| \"| ').{0,10}",
    "139": r"sentry[_-]?default[_-]?org(=| =|:| :|\"|'| \"| ').{0,10}",
    "140": r"sentry[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "141": r"sendwithus[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "142": r"sendgrid[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "143": r"sendgrid[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "144": r"sendgrid[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "145": r"sendgrid[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "146": r"sendgrid[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "147": r"sendgrid(=| =|:| :|\"|'| \"| ').{0,10}",
    "148": r"selion[_-]?selenium[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "149": r"selion[_-]?log[_-]?level[_-]?dev(=| =|:| :|\"|'| \"| ').{0,10}",
    "150": r"segment[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "151": r"secretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "152": r"secretaccesskey(=| =|:| :|\"|'| \"| ').{0,10}",
    "153": r"secret[_-]?key[_-]?base(=| =|:| :|\"|'| \"| ').{0,10}",
    "154": r"secret[_-]?9(=| =|:| :|\"|'| \"| ').{0,10}",
    "155": r"secret[_-]?8(=| =|:| :|\"|'| \"| ').{0,10}",
    "156": r"secret[_-]?7(=| =|:| :|\"|'| \"| ').{0,10}",
    "157": r"secret[_-]?6(=| =|:| :|\"|'| \"| ').{0,10}",
    "158": r"secret[_-]?5(=| =|:| :|\"|'| \"| ').{0,10}",
    "159": r"secret[_-]?4(=| =|:| :|\"|'| \"| ').{0,10}",
    "160": r"secret[_-]?3(=| =|:| :|\"|'| \"| ').{0,10}",
    "161": r"secret[_-]?2(=| =|:| :|\"|'| \"| ').{0,10}",
    "162": r"secret[_-]?11(=| =|:| :|\"|'| \"| ').{0,10}",
    "163": r"secret[_-]?10(=| =|:| :|\"|'| \"| ').{0,10}",
    "164": r"secret[_-]?1(=| =|:| :|\"|'| \"| ').{0,10}",
    "165": r"secret[_-]?0(=| =|:| :|\"|'| \"| ').{0,10}",
    "166": r"sdr[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "167": r"scrutinizer[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "168": r"sauce[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "169": r"sandbox[_-]?aws[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "170": r"sandbox[_-]?aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "171": r"sandbox[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "172": r"salesforce[_-]?bulk[_-]?test[_-]?security[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "173": r"salesforce[_-]?bulk[_-]?test[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "174": r"sacloud[_-]?api(=| =|:| :|\"|'| \"| ').{0,10}",
    "175": r"sacloud[_-]?access[_-]?token[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "176": r"sacloud[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "177": r"s3[_-]?user[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "178": r"s3[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "179": r"s3[_-]?secret[_-]?assets(=| =|:| :|\"|'| \"| ').{0,10}",
    "180": r"s3[_-]?secret[_-]?app[_-]?logs(=| =|:| :|\"|'| \"| ').{0,10}",
    "181": r"s3[_-]?key[_-]?assets(=| =|:| :|\"|'| \"| ').{0,10}",
    "182": r"s3[_-]?key[_-]?app[_-]?logs(=| =|:| :|\"|'| \"| ').{0,10}",
    "183": r"s3[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "184": r"s3[_-]?external[_-]?3[_-]?amazonaws[_-]?com(=| =|:| :|\"|'| \"| ').{0,10}",
    "185": r"s3[_-]?bucket[_-]?name[_-]?assets(=| =|:| :|\"|'| \"| ').{0,10}",
    "186": r"s3[_-]?bucket[_-]?name[_-]?app[_-]?logs(=| =|:| :|\"|'| \"| ').{0,10}",
    "187": r"s3[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "188": r"s3[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "189": r"rubygems[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "190": r"rtd[_-]?store[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "191": r"rtd[_-]?key[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "192": r"route53[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "193": r"ropsten[_-]?private[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "194": r"rinkeby[_-]?private[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "195": r"rest[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "196": r"repotoken(=| =|:| :|\"|'| \"| ').{0,10}",
    "197": r"reporting[_-]?webdav[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "198": r"reporting[_-]?webdav[_-]?pwd(=| =|:| :|\"|'| \"| ').{0,10}",
    "199": r"release[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "200": r"release[_-]?gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "201": r"registry[_-]?secure(=| =|:| :|\"|'| \"| ').{0,10}",
    "202": r"registry[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "203": r"refresh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "204": r"rediscloud[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "205": r"redis[_-]?stunnel[_-]?urls(=| =|:| :|\"|'| \"| ').{0,10}",
    "206": r"randrmusicapiaccesstoken(=| =|:| :|\"|'| \"| ').{0,10}",
    "207": r"rabbitmq[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "208": r"quip[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "209": r"qiita[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "210": r"pypi[_-]?passowrd(=| =|:| :|\"|'| \"| ').{0,10}",
    "211": r"pushover[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "212": r"publish[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "213": r"publish[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "214": r"publish[_-]?access(=| =|:| :|\"|'| \"| ').{0,10}",
    "215": r"project[_-]?config(=| =|:| :|\"|'| \"| ').{0,10}",
    "216": r"prod[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "217": r"prod[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "218": r"prod[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "219": r"private[_-]?signing[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "220": r"pring[_-]?mail[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "221": r"preferred[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "222": r"prebuild[_-]?auth(=| =|:| :|\"|'| \"| ').{0,10}",
    "223": r"postgresql[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "224": r"postgresql[_-]?db(=| =|:| :|\"|'| \"| ').{0,10}",
    "225": r"postgres[_-]?env[_-]?postgres[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "226": r"postgres[_-]?env[_-]?postgres[_-]?db(=| =|:| :|\"|'| \"| ').{0,10}",
    "227": r"plugin[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "228": r"plotly[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "229": r"places[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "230": r"places[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "231": r"pg[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "232": r"pg[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "233": r"personal[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "234": r"personal[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "235": r"percy[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "236": r"percy[_-]?project(=| =|:| :|\"|'| \"| ').{0,10}",
    "237": r"paypal[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "238": r"passwordtravis(=| =|:| :|\"|'| \"| ').{0,10}",
    "239": r"parse[_-]?js[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "240": r"pagerduty[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "241": r"packagecloud[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "242": r"ossrh[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "243": r"ossrh[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "244": r"ossrh[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "245": r"ossrh[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "246": r"ossrh[_-]?jira[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "247": r"os[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "248": r"os[_-]?auth[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "249": r"org[_-]?project[_-]?gradle[_-]?sonatype[_-]?nexus[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "250": r"org[_-]?gradle[_-]?project[_-]?sonatype[_-]?nexus[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "251": r"openwhisk[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "252": r"open[_-]?whisk[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "253": r"onesignal[_-]?user[_-]?auth[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "254": r"onesignal[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "255": r"omise[_-]?skey(=| =|:| :|\"|'| \"| ').{0,10}",
    "256": r"omise[_-]?pubkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "257": r"omise[_-]?pkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "258": r"omise[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "259": r"okta[_-]?oauth2[_-]?clientsecret(=| =|:| :|\"|'| \"| ').{0,10}",
    "260": r"okta[_-]?oauth2[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "261": r"okta[_-]?client[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "262": r"ofta[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "263": r"ofta[_-]?region(=| =|:| :|\"|'| \"| ').{0,10}",
    "264": r"ofta[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "265": r"octest[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "266": r"octest[_-]?app[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "267": r"octest[_-]?app[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "268": r"oc[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "269": r"object[_-]?store[_-]?creds(=| =|:| :|\"|'| \"| ').{0,10}",
    "270": r"object[_-]?store[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "271": r"object[_-]?storage[_-]?region[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "272": r"object[_-]?storage[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "273": r"oauth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "274": r"numbers[_-]?service[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "275": r"nuget[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "276": r"nuget[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "277": r"nuget[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "278": r"npm[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "279": r"npm[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "280": r"npm[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "281": r"npm[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "282": r"npm[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "283": r"npm[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "284": r"npm[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "285": r"now[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "286": r"non[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "287": r"node[_-]?pre[_-]?gyp[_-]?secretaccesskey(=| =|:| :|\"|'| \"| ').{0,10}",
    "288": r"node[_-]?pre[_-]?gyp[_-]?github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "289": r"node[_-]?pre[_-]?gyp[_-]?accesskeyid(=| =|:| :|\"|'| \"| ').{0,10}",
    "290": r"node[_-]?env(=| =|:| :|\"|'| \"| ').{0,10}",
    "291": r"ngrok[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "292": r"ngrok[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "293": r"nexuspassword(=| =|:| :|\"|'| \"| ').{0,10}",
    "294": r"nexus[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "295": r"new[_-]?relic[_-]?beta[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "296": r"netlify[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "297": r"nativeevents(=| =|:| :|\"|'| \"| ').{0,10}",
    "298": r"mysqlsecret(=| =|:| :|\"|'| \"| ').{0,10}",
    "299": r"mysqlmasteruser(=| =|:| :|\"|'| \"| ').{0,10}",
    "300": r"mysql[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "301": r"mysql[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "302": r"mysql[_-]?root[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "303": r"mysql[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "304": r"mysql[_-]?hostname(=| =|:| :|\"|'| \"| ').{0,10}",
    "305": r"mysql[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "306": r"my[_-]?secret[_-]?env(=| =|:| :|\"|'| \"| ').{0,10}",
    "307": r"multi[_-]?workspace[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "308": r"multi[_-]?workflow[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "309": r"multi[_-]?disconnect[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "310": r"multi[_-]?connect[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "311": r"multi[_-]?bob[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "312": r"minio[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "313": r"minio[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "314": r"mile[_-]?zero[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "315": r"mh[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "316": r"mh[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "317": r"mg[_-]?public[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "318": r"mg[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "319": r"mapboxaccesstoken(=| =|:| :|\"|'| \"| ').{0,10}",
    "320": r"mapbox[_-]?aws[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "321": r"mapbox[_-]?aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "322": r"mapbox[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "323": r"mapbox[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "324": r"manifest[_-]?app[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "325": r"manifest[_-]?app[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "326": r"mandrill[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "327": r"managementapiaccesstoken(=| =|:| :|\"|'| \"| ').{0,10}",
    "328": r"management[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "329": r"manage[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "330": r"manage[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "331": r"mailgun[_-]?secret[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "332": r"mailgun[_-]?pub[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "333": r"mailgun[_-]?pub[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "334": r"mailgun[_-]?priv[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "335": r"mailgun[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "336": r"mailgun[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "337": r"mailgun[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "338": r"mailer[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "339": r"mailchimp[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "340": r"mailchimp[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "341": r"mail[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "342": r"magento[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "343": r"magento[_-]?auth[_-]?username (=| =|:| :|\"|'| \"| ').{0,10}",
    "344": r"magento[_-]?auth[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "345": r"lottie[_-]?upload[_-]?cert[_-]?key[_-]?store[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "346": r"lottie[_-]?upload[_-]?cert[_-]?key[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "347": r"lottie[_-]?s3[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "348": r"lottie[_-]?happo[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "349": r"lottie[_-]?happo[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "350": r"looker[_-]?test[_-]?runner[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "351": r"ll[_-]?shared[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "352": r"ll[_-]?publish[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "353": r"linux[_-]?signing[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "354": r"linkedin[_-]?client[_-]?secretor lottie[_-]?s3[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "355": r"lighthouse[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "356": r"lektor[_-]?deploy[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "357": r"lektor[_-]?deploy[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "358": r"leanplum[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "359": r"kxoltsn3vogdop92m(=| =|:| :|\"|'| \"| ').{0,10}",
    "360": r"kubeconfig(=| =|:| :|\"|'| \"| ').{0,10}",
    "361": r"kubecfg[_-]?s3[_-]?path(=| =|:| :|\"|'| \"| ').{0,10}",
    "362": r"kovan[_-]?private[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "363": r"keystore[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "364": r"kafka[_-]?rest[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "365": r"kafka[_-]?instance[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "366": r"kafka[_-]?admin[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "367": r"jwt[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "368": r"jdbc:mysql(=| =|:| :|\"|'| \"| ').{0,10}",
    "369": r"jdbc[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "370": r"jdbc[_-]?databaseurl(=| =|:| :|\"|'| \"| ').{0,10}",
    "371": r"itest[_-]?gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "372": r"ios[_-]?docs[_-]?deploy[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "373": r"internal[_-]?secrets(=| =|:| :|\"|'| \"| ').{0,10}",
    "374": r"integration[_-]?test[_-]?appid(=| =|:| :|\"|'| \"| ').{0,10}",
    "375": r"integration[_-]?test[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "376": r"index[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "377": r"ij[_-]?repo[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "378": r"ij[_-]?repo[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "379": r"hub[_-]?dxia2[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "380": r"homebrew[_-]?github[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "381": r"hockeyapp[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "382": r"heroku[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "383": r"heroku[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "384": r"heroku[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "385": r"hb[_-]?codesign[_-]?key[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "386": r"hb[_-]?codesign[_-]?gpg[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "387": r"hab[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "388": r"hab[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "389": r"grgit[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "390": r"gren[_-]?github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "391": r"gradle[_-]?signing[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "392": r"gradle[_-]?signing[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "393": r"gradle[_-]?publish[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "394": r"gradle[_-]?publish[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "395": r"google[_-]?private[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "396": r"google[_-]?maps[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "397": r"google[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "398": r"google[_-]?client[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "399": r"google[_-]?client[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "400": r"google[_-]?account[_-]?type(=| =|:| :|\"|'| \"| ').{0,10}",
    "401": r"gogs[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "402": r"gitlab[_-]?user[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "403": r"github[_-]?tokens(=| =|:| :|\"|'| \"| ').{0,10}",
    "404": r"github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "405": r"github[_-]?repo(=| =|:| :|\"|'| \"| ').{0,10}",
    "406": r"github[_-]?release[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "407": r"github[_-]?pwd(=| =|:| :|\"|'| \"| ').{0,10}",
    "408": r"github[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "409": r"github[_-]?oauth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "410": r"github[_-]?oauth(=| =|:| :|\"|'| \"| ').{0,10}",
    "411": r"github[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "412": r"github[_-]?hunter[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "413": r"github[_-]?hunter[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "414": r"github[_-]?deployment[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "415": r"github[_-]?deploy[_-]?hb[_-]?doc[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "416": r"github[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "417": r"github[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "418": r"github[_-]?auth(=| =|:| :|\"|'| \"| ').{0,10}",
    "419": r"github[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "420": r"github[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "421": r"github[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "422": r"git[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "423": r"git[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "424": r"git[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "425": r"git[_-]?committer[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "426": r"git[_-]?committer[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "427": r"git[_-]?author[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "428": r"git[_-]?author[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "429": r"ghost[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "430": r"ghb[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "431": r"gh[_-]?unstable[_-]?oauth[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "432": r"gh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "433": r"gh[_-]?repo[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "434": r"gh[_-]?oauth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "435": r"gh[_-]?oauth[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "436": r"gh[_-]?next[_-]?unstable[_-]?oauth[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "437": r"gh[_-]?next[_-]?unstable[_-]?oauth[_-]?client[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "438": r"gh[_-]?next[_-]?oauth[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "439": r"gh[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "440": r"gh[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "441": r"gcs[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "442": r"gcr[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "443": r"gcloud[_-]?service[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "444": r"gcloud[_-]?project(=| =|:| :|\"|'| \"| ').{0,10}",
    "445": r"gcloud[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "446": r"ftp[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "447": r"ftp[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "448": r"ftp[_-]?pw(=| =|:| :|\"|'| \"| ').{0,10}",
    "449": r"ftp[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "450": r"ftp[_-]?login(=| =|:| :|\"|'| \"| ').{0,10}",
    "451": r"ftp[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "452": r"fossa[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "453": r"flickr[_-]?api[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "454": r"flickr[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "455": r"flask[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "456": r"firefox[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "457": r"firebase[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "458": r"firebase[_-]?project[_-]?develop(=| =|:| :|\"|'| \"| ').{0,10}",
    "459": r"firebase[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "460": r"firebase[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "461": r"firebase[_-]?api[_-]?json(=| =|:| :|\"|'| \"| ').{0,10}",
    "462": r"file[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "463": r"exp[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "464": r"eureka[_-]?awssecretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "465": r"env[_-]?sonatype[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "466": r"env[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "467": r"env[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "468": r"env[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "469": r"env[_-]?heroku[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "470": r"env[_-]?github[_-]?oauth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "471": r"end[_-]?user[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "472": r"encryption[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "473": r"elasticsearch[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "474": r"elastic[_-]?cloud[_-]?auth(=| =|:| :|\"|'| \"| ').{0,10}",
    "475": r"dsonar[_-]?projectkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "476": r"dsonar[_-]?login(=| =|:| :|\"|'| \"| ').{0,10}",
    "477": r"droplet[_-]?travis[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "478": r"dropbox[_-]?oauth[_-]?bearer(=| =|:| :|\"|'| \"| ').{0,10}",
    "479": r"doordash[_-]?auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "480": r"dockerhubpassword(=| =|:| :|\"|'| \"| ').{0,10}",
    "481": r"dockerhub[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "482": r"docker[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "483": r"docker[_-]?postgres[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "484": r"docker[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "485": r"docker[_-]?passwd(=| =|:| :|\"|'| \"| ').{0,10}",
    "486": r"docker[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "487": r"docker[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "488": r"docker[_-]?hub[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "489": r"digitalocean[_-]?ssh[_-]?key[_-]?ids(=| =|:| :|\"|'| \"| ').{0,10}",
    "490": r"digitalocean[_-]?ssh[_-]?key[_-]?body(=| =|:| :|\"|'| \"| ').{0,10}",
    "491": r"digitalocean[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "492": r"dgpg[_-]?passphrase(=| =|:| :|\"|'| \"| ').{0,10}",
    "493": r"deploy[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "494": r"deploy[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "495": r"deploy[_-]?secure(=| =|:| :|\"|'| \"| ').{0,10}",
    "496": r"deploy[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "497": r"ddgc[_-]?github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "498": r"ddg[_-]?test[_-]?email[_-]?pw(=| =|:| :|\"|'| \"| ').{0,10}",
    "499": r"ddg[_-]?test[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "500": r"db[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "501": r"db[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "502": r"db[_-]?pw(=| =|:| :|\"|'| \"| ').{0,10}",
    "503": r"db[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "504": r"db[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "505": r"db[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "506": r"db[_-]?connection(=| =|:| :|\"|'| \"| ').{0,10}",
    "507": r"datadog[_-]?app[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "508": r"datadog[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "509": r"database[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "510": r"database[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "511": r"database[_-]?port(=| =|:| :|\"|'| \"| ').{0,10}",
    "512": r"database[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "513": r"database[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "514": r"database[_-]?host(=| =|:| :|\"|'| \"| ').{0,10}",
    "515": r"danger[_-]?github[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "516": r"cypress[_-]?record[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "517": r"coverity[_-]?scan[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "518": r"coveralls[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "519": r"coveralls[_-]?repo[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "520": r"coveralls[_-]?api[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "521": r"cos[_-]?secrets(=| =|:| :|\"|'| \"| ').{0,10}",
    "522": r"conversation[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "523": r"conversation[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "524": r"contentful[_-]?v2[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "525": r"contentful[_-]?test[_-]?org[_-]?cma[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "526": r"contentful[_-]?php[_-]?management[_-]?test[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "527": r"contentful[_-]?management[_-]?api[_-]?access[_-]?token[_-]?new(=| =|:| :|\"|'| \"| ').{0,10}",
    "528": r"contentful[_-]?management[_-]?api[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "529": r"contentful[_-]?integration[_-]?management[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "530": r"contentful[_-]?cma[_-]?test[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "531": r"contentful[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "532": r"consumerkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "533": r"consumer[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "534": r"conekta[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "535": r"coding[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "536": r"codecov[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "537": r"codeclimate[_-]?repo[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "538": r"codacy[_-]?project[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "539": r"cocoapods[_-]?trunk[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "540": r"cocoapods[_-]?trunk[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "541": r"cn[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "542": r"cn[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "543": r"clu[_-]?ssh[_-]?private[_-]?key[_-]?base64(=| =|:| :|\"|'| \"| ').{0,10}",
    "544": r"clu[_-]?repo[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "545": r"cloudinary[_-]?url[_-]?staging(=| =|:| :|\"|'| \"| ').{0,10}",
    "546": r"cloudinary[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "547": r"cloudflare[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "548": r"cloudflare[_-]?auth[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "549": r"cloudflare[_-]?auth[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "550": r"cloudflare[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "551": r"cloudant[_-]?service[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "552": r"cloudant[_-]?processed[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "553": r"cloudant[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "554": r"cloudant[_-]?parsed[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "555": r"cloudant[_-]?order[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "556": r"cloudant[_-]?instance(=| =|:| :|\"|'| \"| ').{0,10}",
    "557": r"cloudant[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "558": r"cloudant[_-]?audited[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "559": r"cloudant[_-]?archived[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "560": r"cloud[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "561": r"clojars[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "562": r"client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "563": r"cli[_-]?e2e[_-]?cma[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "564": r"claimr[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "565": r"claimr[_-]?superuser(=| =|:| :|\"|'| \"| ').{0,10}",
    "566": r"claimr[_-]?db(=| =|:| :|\"|'| \"| ').{0,10}",
    "567": r"claimr[_-]?database(=| =|:| :|\"|'| \"| ').{0,10}",
    "568": r"ci[_-]?user[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "569": r"ci[_-]?server[_-]?name(=| =|:| :|\"|'| \"| ').{0,10}",
    "570": r"ci[_-]?registry[_-]?user(=| =|:| :|\"|'| \"| ').{0,10}",
    "571": r"ci[_-]?project[_-]?url(=| =|:| :|\"|'| \"| ').{0,10}",
    "572": r"ci[_-]?deploy[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "573": r"chrome[_-]?refresh[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "574": r"chrome[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "575": r"cheverny[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "576": r"cf[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "577": r"certificate[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "578": r"censys[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "579": r"cattle[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "580": r"cattle[_-]?agent[_-]?instance[_-]?auth(=| =|:| :|\"|'| \"| ').{0,10}",
    "581": r"cattle[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "582": r"cargo[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "583": r"cache[_-]?s3[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "584": r"bx[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "585": r"bx[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "586": r"bundlesize[_-]?github[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "587": r"built[_-]?branch[_-]?deploy[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "588": r"bucketeer[_-]?aws[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "589": r"bucketeer[_-]?aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "590": r"browserstack[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "591": r"browser[_-]?stack[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "592": r"brackets[_-]?repo[_-]?oauth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "593": r"bluemix[_-]?username(=| =|:| :|\"|'| \"| ').{0,10}",
    "594": r"bluemix[_-]?pwd(=| =|:| :|\"|'| \"| ').{0,10}",
    "595": r"bluemix[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "596": r"bluemix[_-]?pass[_-]?prod(=| =|:| :|\"|'| \"| ').{0,10}",
    "597": r"bluemix[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "598": r"bluemix[_-]?auth(=| =|:| :|\"|'| \"| ').{0,10}",
    "599": r"bluemix[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "600": r"bintraykey(=| =|:| :|\"|'| \"| ').{0,10}",
    "601": r"bintray[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "602": r"bintray[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "603": r"bintray[_-]?gpg[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "604": r"bintray[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "605": r"bintray[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "606": r"b2[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "607": r"b2[_-]?app[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "608": r"awssecretkey(=| =|:| :|\"|'| \"| ').{0,10}",
    "609": r"awscn[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "610": r"awscn[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "611": r"awsaccesskeyid(=| =|:| :|\"|'| \"| ').{0,10}",
    "612": r"aws[_-]?ses[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "613": r"aws[_-]?ses[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "614": r"aws[_-]?secrets(=| =|:| :|\"|'| \"| ').{0,10}",
    "615": r"aws[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "616": r"aws[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "617": r"aws[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "618": r"aws[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "619": r"aws[_-]?config[_-]?secretaccesskey(=| =|:| :|\"|'| \"| ').{0,10}",
    "620": r"aws[_-]?config[_-]?accesskeyid(=| =|:| :|\"|'| \"| ').{0,10}",
    "621": r"aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "622": r"aws[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "623": r"aws[_-]?access(=| =|:| :|\"|'| \"| ').{0,10}",
    "624": r"author[_-]?npm[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "625": r"author[_-]?email[_-]?addr(=| =|:| :|\"|'| \"| ').{0,10}",
    "626": r"auth0[_-]?client[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "627": r"auth0[_-]?api[_-]?clientsecret(=| =|:| :|\"|'| \"| ').{0,10}",
    "628": r"auth[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "629": r"assistant[_-]?iam[_-]?apikey(=| =|:| :|\"|'| \"| ').{0,10}",
    "630": r"artifacts[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "631": r"artifacts[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "632": r"artifacts[_-]?bucket(=| =|:| :|\"|'| \"| ').{0,10}",
    "633": r"artifacts[_-]?aws[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "634": r"artifacts[_-]?aws[_-]?access[_-]?key[_-]?id(=| =|:| :|\"|'| \"| ').{0,10}",
    "635": r"artifactory[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "636": r"argos[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "637": r"apple[_-]?id[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "638": r"appclientsecret(=| =|:| :|\"|'| \"| ').{0,10}",
    "639": r"app[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "640": r"app[_-]?secrete(=| =|:| :|\"|'| \"| ').{0,10}",
    "641": r"app[_-]?report[_-]?token[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "642": r"app[_-]?bucket[_-]?perm(=| =|:| :|\"|'| \"| ').{0,10}",
    "643": r"apigw[_-]?access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "644": r"apiary[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "645": r"api[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "646": r"api[_-]?key[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "647": r"api[_-]?key[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "648": r"api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "649": r"aos[_-]?sec(=| =|:| :|\"|'| \"| ').{0,10}",
    "650": r"aos[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "651": r"ansible[_-]?vault[_-]?password(=| =|:| :|\"|'| \"| ').{0,10}",
    "652": r"android[_-]?docs[_-]?deploy[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "653": r"anaconda[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "654": r"amazon[_-]?secret[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "655": r"alicloud[_-]?secret[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "656": r"alicloud[_-]?access[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "657": r"alias[_-]?pass(=| =|:| :|\"|'| \"| ').{0,10}",
    "658": r"algolia[_-]?search[_-]?key[_-]?1(=| =|:| :|\"|'| \"| ').{0,10}",
    "659": r"algolia[_-]?search[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "660": r"algolia[_-]?search[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "661": r"algolia[_-]?api[_-]?key[_-]?search(=| =|:| :|\"|'| \"| ').{0,10}",
    "662": r"algolia[_-]?api[_-]?key[_-]?mcm(=| =|:| :|\"|'| \"| ').{0,10}",
    "663": r"algolia[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "664": r"algolia[_-]?admin[_-]?key[_-]?mcm(=| =|:| :|\"|'| \"| ').{0,10}",
    "665": r"algolia[_-]?admin[_-]?key[_-]?2(=| =|:| :|\"|'| \"| ').{0,10}",
    "666": r"algolia[_-]?admin[_-]?key[_-]?1(=| =|:| :|\"|'| \"| ').{0,10}",
    "667": r"adzerk[_-]?api[_-]?key(=| =|:| :|\"|'| \"| ').{0,10}",
    "668": r"admin[_-]?email(=| =|:| :|\"|'| \"| ').{0,10}",
    "669": r"account[_-]?sid(=| =|:| :|\"|'| \"| ').{0,10}",
    "670": r"access[_-]?token(=| =|:| :|\"|'| \"| ').{0,10}",
    "671": r"access[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
    "672": r"access[_-]?key[_-]?secret(=| =|:| :|\"|'| \"| ').{0,10}",
}

_template = """
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <style>
       h1 {
          font-family: sans-serif;
       }
       a {
         color: #fff;
       }
       .textblock {
         font-size: 16px;
         font-family: Helvetica, sans-serif;
         color: #fff;
         background-color: #222222;
         margin-left: 10px;
       }
       .containerjs {
         background-color: #222222;
         padding: 10px;
         margin: 0 auto;
         font-family: helvetica;
         border-width: 1px;
         border-style: solid;
         border-color: #8a8a8a;
         color: #fff;
         margin-bottom: 15px;
         overflow-x: scroll;
       }
  </style>
  
</head>
<body contenteditable="true">
    <h1 id="secretfinder" style="text-align: center;">SecretFinder Output</h0>
    <div class="containerjs">
  $$content$$
    </div>
</body>
</html>
"""


def parser_error(msg):
    print("Usage: python %s [OPTIONS] use -h for help" % sys.argv[0])
    print("Error: %s" % msg)
    sys.exit(0)


def getContext(matches, content, name, rex=".+?"):
    """ get context """
    items = []
    matches2 = []
    for i in [x[0] for x in matches]:
        if i not in matches2:
            matches2.append(i)
    for m in matches2:
        context = re.findall(r"%s%s%s" % (rex, m, rex), content, re.IGNORECASE)
        print(context)
        if context != []:
            item = {
                "matched": m,
                "name": name,
                "context": context,
                "multi_context": True if len(context) > 1 else False,
            }
            items.append(item)
    return items


def parser_file(content, mode=1, more_regex=None, no_dup=1):
    """ parser file """
    if mode == 1:
        if len(content) > 1000000:
            content = content.replace(";", ";\r\n").replace(",", ",\r\n")
        else:
            content = jsbeautifier.beautify(content)
    all_items = []
    for regex in _regex.items():
        r = re.compile(regex[1], re.VERBOSE)
        print(r)
        if mode == 1:
            all_matches = [
                (m.group(0), m.start(0), m.end(0)) for m in re.finditer(r, content)
            ]
            items = getContext(all_matches, content, regex[0])
            if items != []:
                all_items.append(items)
        else:
            items = [
                {
                    "matched": m.group(0),
                    "context": [],
                    "name": regex[0],
                    "multi_context": False,
                }
                for m in re.finditer(r, content)
            ]
        if items != []:
            all_items.append(items)
    if all_items != []:
        k = []
        for i in range(len(all_items)):
            for ii in all_items[i]:
                if ii not in k:
                    k.append(ii)
        if k != []:
            all_items = k

    if no_dup:
        all_matched = set()
        no_dup_items = []
        for item in all_items:
            if item != [] and type(item) is dict:
                if item["matched"] not in all_matched:
                    all_matched.add(item["matched"])
                    no_dup_items.append(item)
        all_items = no_dup_items

    filtered_items = []
    if all_items != []:
        for item in all_items:
            if more_regex:
                if re.search(more_regex, item["matched"]):
                    filtered_items.append(item)
            else:
                filtered_items.append(item)
    return filtered_items


def parser_input(input):
    """ Parser Input """
    # method 1 - url
    schemes = ("http://", "https://", "ftp://", "file://", "ftps://")
    if input.startswith(schemes):
        return [input]
    # method 2 - url inpector firefox/chrome
    if input.startswith("view-source:"):
        return [input[12:]]
    # method 3 - Burp file
    if args.burp:
        jsfiles = []
        items = []

        try:
            items = xml.etree.ElementTree.fromstring(open(args.input, "r").read())
        except Exception as err:
            print(err)
            sys.exit()
        for item in items:
            jsfiles.append(
                {
                    "js": base64.b64decode(item.find("response").text).decode(
                        "utf-8", "replace"
                    ),
                    "url": item.find("url").text,
                }
            )
        return jsfiles
    # method 4 - folder with a wildcard
    if "*" in input:
        paths = glob.glob(os.path.abspath(input))
        for index, path in enumerate(paths):
            paths[index] = "file://%s" % path
        return (
            paths
            if len(paths) > 0
            else parser_error("Input with wildcard does not match any files.")
        )

    # method 5 - local file
    path = "file://%s" % os.path.abspath(input)
    return [
        path
        if os.path.exists(input)
        else parser_error(
            "file could not be found (maybe you forgot to add http/https)."
        )
    ]


def html_save(output):
    """ html output """
    hide = os.dup(1)
    os.close(1)
    os.open(os.devnull, os.O_RDWR, os.O_CREAT)
    try:
        text_file = open(args.output, "ab")
        text_file.write(_template.replace("$$content$$", output).encode("utf-8"))
        text_file.close()

        print("URL to access output: file://%s" % os.path.abspath(args.output))
        file = "file:///%s" % (os.path.abspath(args.output))
        if sys.platform == "linux" or sys.platform == "linux2":
            subprocess.call(["xdg-open", file])
        else:
            webbrowser.open(file)
    except Exception as err:
        print("Output can't be saved in %s due to exception: %s" % (args.output, err))
    finally:
        os.dup2(hide, 1)


def cli_output(matched):
    """ cli output """
    for match in matched:
        print(
            match.get("name")
            + "\t->\t"
            + match.get("matched").encode("ascii", "ignore").decode("utf-8")
        )


def urlParser(url):
    """ urlParser """
    parse = urlparse(url)
    urlParser.this_root = parse.scheme + "://" + parse.netloc
    urlParser.this_path = parse.scheme + "://" + parse.netloc + "/" + parse.path


def extractjsurl(content, base_url):
    """ JS url extract from html page """
    soup = html.fromstring(content)
    all_src = []
    urlParser(base_url)
    for src in soup.xpath("//script"):
        src = src.xpath("@src")[0] if src.xpath("@src") != [] else []
        if src != []:
            if src.startswith(("http://", "https://", "ftp://", "ftps://")):
                if src not in all_src:
                    all_src.append(src)
            elif src.startswith("//"):
                src = "http://" + src[2:]
                if src not in all_src:
                    all_src.append(src)
            elif src.startswith("/"):
                src = urlParser.this_root + src
                if src not in all_src:
                    all_src.append(src)
            else:
                src = urlParser.this_path + src
                if src not in all_src:
                    all_src.append(src)
    if args.ignore and all_src != []:
        temp = all_src
        ignore = []
        for i in args.ignore.split(";"):
            for src in all_src:
                if i in src:
                    ignore.append(src)
        if ignore:
            for i in ignore:
                temp.pop(int(temp.index(i)))
        return temp
    if args.only:
        temp = all_src
        only = []
        for i in args.only.split(";"):
            for src in all_src:
                if i in src:
                    only.append(src)
        return only
    return all_src


def send_request(url):
    """ Send Request """
    # read local file
    # https://github.com/dashea/requests-file
    if "file://" in url:
        s = requests.Session()
        s.mount("file://", FileAdapter())
        return s.get(url).content.decode("utf-8", "replace")
    # set headers and cookies
    headers = {}
    default_headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) \
Chrome/58.0.3029.110 Safari/537.36",
        "Accept": "text/html, application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.8",
        "Accept-Encoding": "gzip",
    }
    if args.headers:
        for i in args.header.split("\\n"):
            # replace space and split
            name, value = i.replace(" ", "").split(":")
            headers[name] = value
    # add cookies
    if args.cookie:
        headers["Cookie"] = args.cookie

    headers.update(default_headers)
    # proxy
    proxies = {}
    if args.proxy:
        proxies.update(
            {
                "http": args.proxy,
                "https": args.proxy,
                # ftp
            }
        )
    try:
        resp = requests.get(url=url, verify=False, headers=headers, proxies=proxies)
        return resp.content.decode("utf-8", "replace")
    except Exception as err:
        print(err)
        sys.exit(0)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-e",
        "--extract",
        help="Extract all javascript links located in a page and process it",
        action="store_true",
        default=False,
    )
    parser.add_argument(
        "-i",
        "--input",
        help="Input a: URL, file or folder",
        required="True",
        action="store",
    )
    parser.add_argument(
        "-o",
        "--output",
        help="Where to save the file, including file name. Default: output.html",
        action="store",
        default="output.html",
    )
    parser.add_argument(
        "-r",
        "--regex",
        help="RegEx for filtering purposes against found endpoint (e.g: ^/api/)",
        action="store",
    )
    parser.add_argument(
        "-b", "--burp", help="Support burp exported file", action="store_true"
    )
    parser.add_argument(
        "-c",
        "--cookie",
        help="Add cookies for authenticated JS files",
        action="store",
        default="",
    )
    parser.add_argument(
        "-g",
        "--ignore",
        help="Ignore js url, if it contain the provided string (string;string2..)",
        action="store",
        default="",
    )
    parser.add_argument(
        "-n",
        "--only",
        help="Process js url, if it contain the provided string (string;string2..)",
        action="store",
        default="",
    )
    parser.add_argument(
        "-H",
        "--headers",
        help='Set headers ("Name:Value\\nName:Value")',
        action="store",
        default="",
    )
    parser.add_argument(
        "-p", "--proxy", help="Set proxy (host:port)", action="store", default=""
    )
    args = parser.parse_args()

    if args.input[-1:] == "/":
        # /aa/ -> /aa
        args.input = args.input[:-1]

    mode = 1
    if args.output == "cli":
        mode = 0
    # add args
    if args.regex:
        # validate regular exp
        try:
            r = re.search(
                args.regex,
                "".join(
                    random.choice(string.ascii_uppercase + string.digits)
                    for _ in range(random.randint(10, 50))
                ),
            )
        except Exception:
            print("your python regex isn't valid")
            sys.exit()

        _regex.update({"custom_regex": args.regex})

    if args.extract:
        content = send_request(args.input)
        urls = extractjsurl(content, args.input)
    else:
        # convert input to URLs or JS files
        urls = parser_input(args.input)
    # conver URLs to js file
    output = ""
    for url in urls:
        print("[ + ] URL: " + url)
        if not args.burp:
            file = send_request(url)
        else:
            file = url.get("js")
            url = url.get("url")

        matched = parser_file(file, mode)
        if len(matched) > 0:
            if args.output == "cli":
                cli_output(matched)
            else:
                output += (
                    '<h1>File: <b>%s</b></h1>'
                    % (escape(url))
                )
                for match in matched:
                    _matched = match.get("matched")
                    _named = match.get("name")
                    header = '<div class="textblock">%s' % (_named.replace("_", " "))
                    body = ""
                    # find same thing in multiple context
                    if match.get("multi_context"):
                        # remove duplicate
                        no_dup = []
                        for context in match.get("context"):
                            if context not in no_dup:
                                body += '</b><div class="containerjs">%s</div></div>' % (
                                    context
                                )
                                body = body.replace(
                                    context,
                                    '<span style="background-color:green">%s</span>'
                                    % context,
                                )
                                no_dup.append(context)
                            # --
                    else:
                        body += '</b><div class="containerjs">%s</div></div>' % (
                            match.get("context")[0]
                            if len(match.get("context")) > 1
                            else match.get("context")
                        )
                        body = body.replace(
                            match.get("context")[0]
                            if len(match.get("context")) > 0
                            else "".join(match.get("context")),
                            '<span style="background-color:green">%s</span>'
                            % (
                                match.get("context")
                                if len(match.get("context")) > 1
                                else match.get("context")
                            ),
                        )
                    output += header + body
            if args.output != "cli":
                html_save(output)
